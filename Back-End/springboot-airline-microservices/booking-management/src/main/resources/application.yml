server:
  port: 8083

spring:
  application:
    name: booking-management

  profiles:
    active: default

  data:
    mongodb:
      uri: mongodb+srv://balaji72118:U8D7YmO9FiXmTdpX@balaji.quhnxrr.mongodb.net/flight-booking-system
      database: flight-booking-system

  datasource:
    url: jdbc:mysql://mysql:3306/flightauth
    username: root
    password: 1707
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    hostname: booking-management
    prefer-ip-address: true

kafka:
  bootstrap-servers: kafka:9092   # Docker service name
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
    acks: all
  consumer:
    group-id: booking-json
    auto-offset-reset: earliest
    enable-auto-commit: true
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

rabbitmq:
  host: rabbitmq
  port: 5672
  username: balaji
  password: 1707

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.yourpackage: DEBUG  # replace with your base package

